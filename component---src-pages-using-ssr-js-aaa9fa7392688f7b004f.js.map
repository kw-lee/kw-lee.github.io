{"version":3,"file":"component---src-pages-using-ssr-js-aaa9fa7392688f7b004f.js","mappings":"+IAoDA,IAxCe,IAAmB,IAAlB,SAAEA,GAAU,GACbC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCAEE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,OACRC,UAAU,UAGZ,4BAAON,IAET,0BACIE,MAAO,CACLK,SAAS,WACTC,UAAU,OACVC,SAAS,iBACTC,QAAQ,OACRC,WAAW,SACXC,eAAe,WAElB,cACaC,kBAA8B,IAAC,IAAK,WAAuB,IAAK,IAAC,qBAAGC,KAAK,8CAA6C,gBAErI,C,+CCJP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEhB,GAAU,EAC3C,MAAM,KAAEiB,IAAShB,EAAAA,EAAAA,gBAAe,YAc1BiB,EAAkBH,GAAeE,EAAKE,aAAaJ,YACnDK,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBH,MAExC,OACE,gCACE,6BAAQI,EAAkBJ,EAAK,MAAMI,EAAiBJ,GACtD,wBAAMK,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASN,IACnC,wBAAMO,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAL,EAAKE,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASN,IACpC,wBAAMK,KAAK,sBAAsBC,QAASJ,IACzClB,EAGP,C,6GCpCA,MA4BayB,EAAO,IAAM,gBAAC,IAAG,CAACT,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEU,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACExB,MAAO,CAAEyB,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKJ,EAAWK,UAElB,yBAAG,kCAC+B,IAChC,qBAAGjB,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAAkB,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://kwlee.github.io/./src/components/layout.js","webpack://kwlee.github.io/./src/components/seo.js","webpack://kwlee.github.io/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata?.title || `Title`} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `2rem`,\n          minHeight: `97dvh`, // Use dvh\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <footer\n          style={{\n            position: `relative`,\n            marginTop: `auto`,\n            fontSize: `var(--font-sm)`,\n            display: `flex`,\n            alignItems: `center`,\n            justifyContent: `center`,\n          }}\n        >\n          Updated at {process.env.GATSBY_BUILD_DATE} {` `} &nbsp; &#124;  &nbsp; {` `} <a href=\"https://github.com/kw-lee/kw-lee.github.io\">Source Code</a>\n        </footer>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["children","useStaticQuery","style","margin","maxWidth","padding","minHeight","position","marginTop","fontSize","display","alignItems","justifyContent","process","href","description","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","serverData","width","borderRadius","alt","src","message","Link","to"],"sourceRoot":""}